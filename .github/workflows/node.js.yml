name: WebApp CI/CD

on:
  push:
    branches:
      - feature-docker

jobs:
  validate-code:
    name: Code validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint || exit 1  

      - name: Notify on failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{\"content\":\"Pipeline Failed\nWorkflow: '${{ github.workflow }}'\nBranch: '${{ github.ref }}'\nCommit: '${{ github.sha }}'\nAuthor: '${{ github.actor }}'\nError: '${{ job.status }}'\"}" ${{ secrets.DISCORD_WEBHOOK_URL }}

  build-and-test:
    name: Build and Test
    needs: validate-code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t todoapp .

      - name: Test with Docker
        run: docker run todoapp npm test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Deploy using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd /path/to/deployment && docker-compose pull && docker-compose up -d'

  notify-status:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send Notification
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{\"content\":\"Pipeline Completed\nWorkflow: '${{ github.workflow }}'\nDeployment Status: ${{ job.status }}\"}" ${{ secrets.DISCORD_WEBHOOK_URL }}
